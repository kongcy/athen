<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athen.system.repository.SysRoleResourceMapper">
    <resultMap id="BaseResultMap" type="com.athen.system.api.model.SysRoleResource">
        <id column="ID" jdbcType="BIGINT" property="id" />
        <result column="ROLE_ID" jdbcType="BIGINT" property="roleId" />
        <result column="RES_ID" jdbcType="BIGINT" property="resId" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.athen.system.api.model.SysRoleResource">
        <id column="SYS_ROLE_RESOURCE_ID" jdbcType="BIGINT" property="id" />
        <result column="SYS_ROLE_RESOURCE_ROLE_ID" jdbcType="BIGINT" property="roleId" />
        <result column="SYS_ROLE_RESOURCE_RES_ID" jdbcType="BIGINT" property="resId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `ID`, `ROLE_ID`, `RES_ID`
    </sql>
    <sql id="Base_Column_List_Alias">
        `sys_role_resource`.`ID` as `SYS_ROLE_RESOURCE_ID`, `sys_role_resource`.`ROLE_ID` as `SYS_ROLE_RESOURCE_ROLE_ID`, 
        `sys_role_resource`.`RES_ID` as `SYS_ROLE_RESOURCE_RES_ID`
    </sql>
    <select id="selectByExample" parameterType="com.athen.system.api.model.SysRoleResourceExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `sys_role_resource`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `sys_role_resource`
        where `ID` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `sys_role_resource`
        where `ID` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.athen.system.api.model.SysRoleResourceExample">
        delete from `sys_role_resource`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.athen.system.api.model.SysRoleResource" useGeneratedKeys="true">
        insert into `sys_role_resource`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                `ID`,
            </if>
            <if test="@Ognl@isNotEmpty(roleId)">
                `ROLE_ID`,
            </if>
            <if test="@Ognl@isNotEmpty(resId)">
                `RES_ID`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(roleId)">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(resId)">
                #{resId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.athen.system.api.model.SysRoleResourceExample" resultType="java.lang.Integer">
        select count(*) from `sys_role_resource`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `sys_role_resource`
        <set>
            <if test="@Ognl@isNotEmpty(record.id)">
                `ID` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(record.roleId)">
                `ROLE_ID` = #{record.roleId,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(record.resId)">
                `RES_ID` = #{record.resId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.athen.system.api.model.SysRoleResource">
        update `sys_role_resource`
        <set>
            <if test="@Ognl@isNotEmpty(roleId)">
                `ROLE_ID` = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(resId)">
                `RES_ID` = #{resId,jdbcType=BIGINT},
            </if>
        </set>
        where `ID` = #{id,jdbcType=BIGINT}
    </update>
</mapper>