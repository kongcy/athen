<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athen.system.repository.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.athen.system.api.model.SysRole">
        <id column="ID" jdbcType="BIGINT" property="id" />
        <result column="NAME" jdbcType="VARCHAR" property="name" />
        <result column="CODE" jdbcType="VARCHAR" property="code" />
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
        <result column="CREATE_USER" jdbcType="BIGINT" property="createUser" />
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="STATE" jdbcType="INTEGER" property="state" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.athen.system.api.model.SysRole">
        <id column="SYS_ROLE_ID" jdbcType="BIGINT" property="id" />
        <result column="SYS_ROLE_NAME" jdbcType="VARCHAR" property="name" />
        <result column="SYS_ROLE_CODE" jdbcType="VARCHAR" property="code" />
        <result column="SYS_ROLE_DESCRIPTION" jdbcType="VARCHAR" property="description" />
        <result column="SYS_ROLE_CREATE_USER" jdbcType="BIGINT" property="createUser" />
        <result column="SYS_ROLE_CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="SYS_ROLE_STATE" jdbcType="INTEGER" property="state" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `ID`, `NAME`, `CODE`, `DESCRIPTION`, `CREATE_USER`, `CREATE_TIME`,'STATE'
    </sql>
    <sql id="Base_Column_List_Alias">
        `sys_role`.`ID` as `SYS_ROLE_ID`, `sys_role`.`NAME` as `SYS_ROLE_NAME`, 
        `sys_role`.`CODE` as `SYS_ROLE_CODE`, `sys_role`.`DESCRIPTION` as `SYS_ROLE_DESCRIPTION`, 
        `sys_role`.`CREATE_USER` as `SYS_ROLE_CREATE_USER`, `sys_role`.`CREATE_TIME` as `SYS_ROLE_CREATE_TIME`
    </sql>
    <select id="selectByExample" parameterType="com.athen.system.api.model.SysRoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `sys_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `sys_role`
        where `ID` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `sys_role`
        where `ID` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.athen.system.api.model.SysRoleExample">
        delete from `sys_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.athen.system.api.model.SysRole" useGeneratedKeys="true">
        insert into `sys_role`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                `ID`,
            </if>
            <if test="@Ognl@isNotEmpty(name)">
                `NAME`,
            </if>
            <if test="@Ognl@isNotEmpty(code)">
                `CODE`,
            </if>
            <if test="@Ognl@isNotEmpty(description)">
                `DESCRIPTION`,
            </if>
            <if test="@Ognl@isNotEmpty(createUser)">
                `CREATE_USER`,
            </if>
            <if test="@Ognl@isNotEmpty(createTime)">
                `CREATE_TIME`,
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                `STATE`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(name)">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(code)">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(description)">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(createUser)">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(createTime)">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.athen.system.api.model.SysRoleExample" resultType="java.lang.Integer">
        select count(*) from `sys_role`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `sys_role`
        <set>
            <if test="@Ognl@isNotEmpty(record.id)">
                `ID` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(record.name)">
                `NAME` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.code)">
                `CODE` = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.description)">
                `DESCRIPTION` = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.createUser)">
                `CREATE_USER` = #{record.createUser,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(record.createTime)">
                `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="@Ognl@isNotEmpty(record.state)">
                `STATE` = #{record.state,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.athen.system.api.model.SysRole">
        update `sys_role`
        <set>
            <if test="@Ognl@isNotEmpty(name)">
                `NAME` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(code)">
                `CODE` = #{code,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(description)">
                `DESCRIPTION` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(createUser)">
                `CREATE_USER` = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="@Ognl@isNotEmpty(createTime)">
                `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                `STATE` = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where `ID` = #{id,jdbcType=BIGINT}
    </update>
</mapper>