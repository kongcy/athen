<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athen.order.repository.OrderTrackMapper">
    <resultMap id="BaseResultMap" type="com.athen.order.api.model.OrderTrack">
        <id column="ID" jdbcType="BIGINT" property="id" />
        <result column="ORDER_ID" jdbcType="BIGINT" property="orderId" />
        <result column="UPDATE_USER" jdbcType="BIGINT" property="updateUser" />
        <result column="USER_TYPE" jdbcType="INTEGER" property="userType" />
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="ORDER_STATE" jdbcType="INTEGER" property="orderState" />
        <result column="OPERATE_TYPE" jdbcType="INTEGER" property="operateType" />
        <result column="MARK" jdbcType="VARCHAR" property="mark" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `ID`, `ORDER_ID`, `UPDATE_USER`, `USER_TYPE`, `UPDATE_TIME`, `ORDER_STATE`, `OPERATE_TYPE`, 
        `MARK`
    </sql>
    <select id="selectByExample" parameterType="com.athen.order.api.model.OrderTrackExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `order_track`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `order_track`
        where `ID` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `order_track`
        where `ID` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.athen.order.api.model.OrderTrackExample">
        delete from `order_track`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.athen.order.api.model.OrderTrack" useGeneratedKeys="true">
        insert into `order_track`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `ID`,
            </if>
            <if test="orderId != null">
                `ORDER_ID`,
            </if>
            <if test="updateUser != null">
                `UPDATE_USER`,
            </if>
            <if test="userType != null">
                `USER_TYPE`,
            </if>
            <if test="updateTime != null">
                `UPDATE_TIME`,
            </if>
            <if test="orderState != null">
                `ORDER_STATE`,
            </if>
            <if test="operateType != null">
                `OPERATE_TYPE`,
            </if>
            <if test="mark != null">
                `MARK`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderState != null">
                #{orderState,jdbcType=INTEGER},
            </if>
            <if test="operateType != null">
                #{operateType,jdbcType=INTEGER},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.athen.order.api.model.OrderTrackExample" resultType="java.lang.Integer">
        select count(*) from `order_track`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `order_track`
        <set>
            <if test="record.id != null">
                `ID` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderId != null">
                `ORDER_ID` = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.updateUser != null">
                `UPDATE_USER` = #{record.updateUser,jdbcType=BIGINT},
            </if>
            <if test="record.userType != null">
                `USER_TYPE` = #{record.userType,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.orderState != null">
                `ORDER_STATE` = #{record.orderState,jdbcType=INTEGER},
            </if>
            <if test="record.operateType != null">
                `OPERATE_TYPE` = #{record.operateType,jdbcType=INTEGER},
            </if>
            <if test="record.mark != null">
                `MARK` = #{record.mark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.athen.order.api.model.OrderTrack">
        update `order_track`
        <set>
            <if test="orderId != null">
                `ORDER_ID` = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null">
                `UPDATE_USER` = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="userType != null">
                `USER_TYPE` = #{userType,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderState != null">
                `ORDER_STATE` = #{orderState,jdbcType=INTEGER},
            </if>
            <if test="operateType != null">
                `OPERATE_TYPE` = #{operateType,jdbcType=INTEGER},
            </if>
            <if test="mark != null">
                `MARK` = #{mark,jdbcType=VARCHAR},
            </if>
        </set>
        where `ID` = #{id,jdbcType=BIGINT}
    </update>
</mapper>