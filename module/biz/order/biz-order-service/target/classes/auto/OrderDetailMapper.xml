<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athen.order.repository.OrderDetailMapper">
    <resultMap id="BaseResultMap" type="com.athen.order.api.model.OrderDetail">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="product_id" jdbcType="BIGINT" property="productId" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="product_count" jdbcType="INTEGER" property="productCount" />
        <result column="product_amount" jdbcType="BIGINT" property="productAmount" />
        <result column="order_id" jdbcType="BIGINT" property="orderId" />
        <result column="member_id" jdbcType="BIGINT" property="memberId" />
        <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
        <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`, `product_id`, `product_name`, `product_count`, `product_amount`, `order_id`, 
        `member_id`, `supplier_id`, `supplier_name`, `create_time`
    </sql>
    <select id="selectByExample" parameterType="com.athen.order.api.model.OrderDetailExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `order_detail`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `order_detail`
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `order_detail`
        where `id` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.athen.order.api.model.OrderDetailExample">
        delete from `order_detail`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.athen.order.api.model.OrderDetail" useGeneratedKeys="true">
        insert into `order_detail`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="productId != null">
                `product_id`,
            </if>
            <if test="productName != null">
                `product_name`,
            </if>
            <if test="productCount != null">
                `product_count`,
            </if>
            <if test="productAmount != null">
                `product_amount`,
            </if>
            <if test="orderId != null">
                `order_id`,
            </if>
            <if test="memberId != null">
                `member_id`,
            </if>
            <if test="supplierId != null">
                `supplier_id`,
            </if>
            <if test="supplierName != null">
                `supplier_name`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productCount != null">
                #{productCount,jdbcType=INTEGER},
            </if>
            <if test="productAmount != null">
                #{productAmount,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=BIGINT},
            </if>
            <if test="supplierName != null">
                #{supplierName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.athen.order.api.model.OrderDetailExample" resultType="java.lang.Integer">
        select count(*) from `order_detail`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `order_detail`
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.productId != null">
                `product_id` = #{record.productId,jdbcType=BIGINT},
            </if>
            <if test="record.productName != null">
                `product_name` = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.productCount != null">
                `product_count` = #{record.productCount,jdbcType=INTEGER},
            </if>
            <if test="record.productAmount != null">
                `product_amount` = #{record.productAmount,jdbcType=BIGINT},
            </if>
            <if test="record.orderId != null">
                `order_id` = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.memberId != null">
                `member_id` = #{record.memberId,jdbcType=BIGINT},
            </if>
            <if test="record.supplierId != null">
                `supplier_id` = #{record.supplierId,jdbcType=BIGINT},
            </if>
            <if test="record.supplierName != null">
                `supplier_name` = #{record.supplierName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.athen.order.api.model.OrderDetail">
        update `order_detail`
        <set>
            <if test="productId != null">
                `product_id` = #{productId,jdbcType=BIGINT},
            </if>
            <if test="productName != null">
                `product_name` = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productCount != null">
                `product_count` = #{productCount,jdbcType=INTEGER},
            </if>
            <if test="productAmount != null">
                `product_amount` = #{productAmount,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                `member_id` = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="supplierId != null">
                `supplier_id` = #{supplierId,jdbcType=BIGINT},
            </if>
            <if test="supplierName != null">
                `supplier_name` = #{supplierName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
</mapper>