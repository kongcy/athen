<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athen.order.repository.OrderReturnsMapper">
    <resultMap id="BaseResultMap" type="com.athen.order.api.model.OrderReturns">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="returns_no" jdbcType="VARCHAR" property="returnsNo" />
        <result column="order_id" jdbcType="BIGINT" property="orderId" />
        <result column="express_no" jdbcType="VARCHAR" property="expressNo" />
        <result column="consignee_realname" jdbcType="VARCHAR" property="consigneeRealname" />
        <result column="consignee_telphone" jdbcType="VARCHAR" property="consigneeTelphone" />
        <result column="consignee_telphone2" jdbcType="VARCHAR" property="consigneeTelphone2" />
        <result column="consignee_address" jdbcType="VARCHAR" property="consigneeAddress" />
        <result column="consignee_zip" jdbcType="VARCHAR" property="consigneeZip" />
        <result column="logistics_type" jdbcType="VARCHAR" property="logisticsType" />
        <result column="logistics_fee" jdbcType="DECIMAL" property="logisticsFee" />
        <result column="order_logistics_status" jdbcType="INTEGER" property="orderLogisticsStatus" />
        <result column="logistics_settlement_status" jdbcType="INTEGER" property="logisticsSettlementStatus" />
        <result column="logistics_result_last" jdbcType="VARCHAR" property="logisticsResultLast" />
        <result column="logistics_result" jdbcType="VARCHAR" property="logisticsResult" />
        <result column="logistics_create_time" jdbcType="TIMESTAMP" property="logisticsCreateTime" />
        <result column="logistics_update_time" jdbcType="TIMESTAMP" property="logisticsUpdateTime" />
        <result column="logistics_settlement_time" jdbcType="TIMESTAMP" property="logisticsSettlementTime" />
        <result column="returns_type" jdbcType="INTEGER" property="returnsType" />
        <result column="handling_way" jdbcType="INTEGER" property="handlingWay" />
        <result column="returns_amount" jdbcType="BIGINT" property="returnsAmount" />
        <result column="return_submit_time" jdbcType="TIMESTAMP" property="returnSubmitTime" />
        <result column="handling_time" jdbcType="TIMESTAMP" property="handlingTime" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.athen.order.api.model.OrderReturns">
        <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`, `returns_no`, `order_id`, `express_no`, `consignee_realname`, `consignee_telphone`, 
        `consignee_telphone2`, `consignee_address`, `consignee_zip`, `logistics_type`, `logistics_fee`, 
        `order_logistics_status`, `logistics_settlement_status`, `logistics_result_last`, 
        `logistics_result`, `logistics_create_time`, `logistics_update_time`, `logistics_settlement_time`, 
        `returns_type`, `handling_way`, `returns_amount`, `return_submit_time`, `handling_time`
    </sql>
    <sql id="Blob_Column_List">
        `remark`
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.athen.order.api.model.OrderReturnsExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from `order_returns`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.athen.order.api.model.OrderReturnsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `order_returns`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from `order_returns`
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `order_returns`
        where `id` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.athen.order.api.model.OrderReturnsExample">
        delete from `order_returns`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.athen.order.api.model.OrderReturns" useGeneratedKeys="true">
        insert into `order_returns`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="returnsNo != null">
                `returns_no`,
            </if>
            <if test="orderId != null">
                `order_id`,
            </if>
            <if test="expressNo != null">
                `express_no`,
            </if>
            <if test="consigneeRealname != null">
                `consignee_realname`,
            </if>
            <if test="consigneeTelphone != null">
                `consignee_telphone`,
            </if>
            <if test="consigneeTelphone2 != null">
                `consignee_telphone2`,
            </if>
            <if test="consigneeAddress != null">
                `consignee_address`,
            </if>
            <if test="consigneeZip != null">
                `consignee_zip`,
            </if>
            <if test="logisticsType != null">
                `logistics_type`,
            </if>
            <if test="logisticsFee != null">
                `logistics_fee`,
            </if>
            <if test="orderLogisticsStatus != null">
                `order_logistics_status`,
            </if>
            <if test="logisticsSettlementStatus != null">
                `logistics_settlement_status`,
            </if>
            <if test="logisticsResultLast != null">
                `logistics_result_last`,
            </if>
            <if test="logisticsResult != null">
                `logistics_result`,
            </if>
            <if test="logisticsCreateTime != null">
                `logistics_create_time`,
            </if>
            <if test="logisticsUpdateTime != null">
                `logistics_update_time`,
            </if>
            <if test="logisticsSettlementTime != null">
                `logistics_settlement_time`,
            </if>
            <if test="returnsType != null">
                `returns_type`,
            </if>
            <if test="handlingWay != null">
                `handling_way`,
            </if>
            <if test="returnsAmount != null">
                `returns_amount`,
            </if>
            <if test="returnSubmitTime != null">
                `return_submit_time`,
            </if>
            <if test="handlingTime != null">
                `handling_time`,
            </if>
            <if test="remark != null">
                `remark`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="returnsNo != null">
                #{returnsNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="expressNo != null">
                #{expressNo,jdbcType=VARCHAR},
            </if>
            <if test="consigneeRealname != null">
                #{consigneeRealname,jdbcType=VARCHAR},
            </if>
            <if test="consigneeTelphone != null">
                #{consigneeTelphone,jdbcType=VARCHAR},
            </if>
            <if test="consigneeTelphone2 != null">
                #{consigneeTelphone2,jdbcType=VARCHAR},
            </if>
            <if test="consigneeAddress != null">
                #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="consigneeZip != null">
                #{consigneeZip,jdbcType=VARCHAR},
            </if>
            <if test="logisticsType != null">
                #{logisticsType,jdbcType=VARCHAR},
            </if>
            <if test="logisticsFee != null">
                #{logisticsFee,jdbcType=DECIMAL},
            </if>
            <if test="orderLogisticsStatus != null">
                #{orderLogisticsStatus,jdbcType=INTEGER},
            </if>
            <if test="logisticsSettlementStatus != null">
                #{logisticsSettlementStatus,jdbcType=INTEGER},
            </if>
            <if test="logisticsResultLast != null">
                #{logisticsResultLast,jdbcType=VARCHAR},
            </if>
            <if test="logisticsResult != null">
                #{logisticsResult,jdbcType=VARCHAR},
            </if>
            <if test="logisticsCreateTime != null">
                #{logisticsCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logisticsUpdateTime != null">
                #{logisticsUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logisticsSettlementTime != null">
                #{logisticsSettlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnsType != null">
                #{returnsType,jdbcType=INTEGER},
            </if>
            <if test="handlingWay != null">
                #{handlingWay,jdbcType=INTEGER},
            </if>
            <if test="returnsAmount != null">
                #{returnsAmount,jdbcType=BIGINT},
            </if>
            <if test="returnSubmitTime != null">
                #{returnSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="handlingTime != null">
                #{handlingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.athen.order.api.model.OrderReturnsExample" resultType="java.lang.Integer">
        select count(*) from `order_returns`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `order_returns`
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.returnsNo != null">
                `returns_no` = #{record.returnsNo,jdbcType=VARCHAR},
            </if>
            <if test="record.orderId != null">
                `order_id` = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.expressNo != null">
                `express_no` = #{record.expressNo,jdbcType=VARCHAR},
            </if>
            <if test="record.consigneeRealname != null">
                `consignee_realname` = #{record.consigneeRealname,jdbcType=VARCHAR},
            </if>
            <if test="record.consigneeTelphone != null">
                `consignee_telphone` = #{record.consigneeTelphone,jdbcType=VARCHAR},
            </if>
            <if test="record.consigneeTelphone2 != null">
                `consignee_telphone2` = #{record.consigneeTelphone2,jdbcType=VARCHAR},
            </if>
            <if test="record.consigneeAddress != null">
                `consignee_address` = #{record.consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.consigneeZip != null">
                `consignee_zip` = #{record.consigneeZip,jdbcType=VARCHAR},
            </if>
            <if test="record.logisticsType != null">
                `logistics_type` = #{record.logisticsType,jdbcType=VARCHAR},
            </if>
            <if test="record.logisticsFee != null">
                `logistics_fee` = #{record.logisticsFee,jdbcType=DECIMAL},
            </if>
            <if test="record.orderLogisticsStatus != null">
                `order_logistics_status` = #{record.orderLogisticsStatus,jdbcType=INTEGER},
            </if>
            <if test="record.logisticsSettlementStatus != null">
                `logistics_settlement_status` = #{record.logisticsSettlementStatus,jdbcType=INTEGER},
            </if>
            <if test="record.logisticsResultLast != null">
                `logistics_result_last` = #{record.logisticsResultLast,jdbcType=VARCHAR},
            </if>
            <if test="record.logisticsResult != null">
                `logistics_result` = #{record.logisticsResult,jdbcType=VARCHAR},
            </if>
            <if test="record.logisticsCreateTime != null">
                `logistics_create_time` = #{record.logisticsCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.logisticsUpdateTime != null">
                `logistics_update_time` = #{record.logisticsUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.logisticsSettlementTime != null">
                `logistics_settlement_time` = #{record.logisticsSettlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.returnsType != null">
                `returns_type` = #{record.returnsType,jdbcType=INTEGER},
            </if>
            <if test="record.handlingWay != null">
                `handling_way` = #{record.handlingWay,jdbcType=INTEGER},
            </if>
            <if test="record.returnsAmount != null">
                `returns_amount` = #{record.returnsAmount,jdbcType=BIGINT},
            </if>
            <if test="record.returnSubmitTime != null">
                `return_submit_time` = #{record.returnSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.handlingTime != null">
                `handling_time` = #{record.handlingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                `remark` = #{record.remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.athen.order.api.model.OrderReturns">
        update `order_returns`
        <set>
            <if test="returnsNo != null">
                `returns_no` = #{returnsNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="expressNo != null">
                `express_no` = #{expressNo,jdbcType=VARCHAR},
            </if>
            <if test="consigneeRealname != null">
                `consignee_realname` = #{consigneeRealname,jdbcType=VARCHAR},
            </if>
            <if test="consigneeTelphone != null">
                `consignee_telphone` = #{consigneeTelphone,jdbcType=VARCHAR},
            </if>
            <if test="consigneeTelphone2 != null">
                `consignee_telphone2` = #{consigneeTelphone2,jdbcType=VARCHAR},
            </if>
            <if test="consigneeAddress != null">
                `consignee_address` = #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="consigneeZip != null">
                `consignee_zip` = #{consigneeZip,jdbcType=VARCHAR},
            </if>
            <if test="logisticsType != null">
                `logistics_type` = #{logisticsType,jdbcType=VARCHAR},
            </if>
            <if test="logisticsFee != null">
                `logistics_fee` = #{logisticsFee,jdbcType=DECIMAL},
            </if>
            <if test="orderLogisticsStatus != null">
                `order_logistics_status` = #{orderLogisticsStatus,jdbcType=INTEGER},
            </if>
            <if test="logisticsSettlementStatus != null">
                `logistics_settlement_status` = #{logisticsSettlementStatus,jdbcType=INTEGER},
            </if>
            <if test="logisticsResultLast != null">
                `logistics_result_last` = #{logisticsResultLast,jdbcType=VARCHAR},
            </if>
            <if test="logisticsResult != null">
                `logistics_result` = #{logisticsResult,jdbcType=VARCHAR},
            </if>
            <if test="logisticsCreateTime != null">
                `logistics_create_time` = #{logisticsCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logisticsUpdateTime != null">
                `logistics_update_time` = #{logisticsUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logisticsSettlementTime != null">
                `logistics_settlement_time` = #{logisticsSettlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="returnsType != null">
                `returns_type` = #{returnsType,jdbcType=INTEGER},
            </if>
            <if test="handlingWay != null">
                `handling_way` = #{handlingWay,jdbcType=INTEGER},
            </if>
            <if test="returnsAmount != null">
                `returns_amount` = #{returnsAmount,jdbcType=BIGINT},
            </if>
            <if test="returnSubmitTime != null">
                `return_submit_time` = #{returnSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="handlingTime != null">
                `handling_time` = #{handlingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                `remark` = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
</mapper>